{"version":3,"sources":["components/ClientsList/index.tsx","components/ClientsList/queries.js","components/AddFormClients/index.tsx","components/EditFormClients/index.tsx","components/app/App.js","index.js"],"names":["editSVG","height","viewBox","width","xmlns","xmlnsXlink","id","gradientUnits","x1","x2","y1","y2","offset","stopColor","d","fill","ClientsList","props","className","clients","map","client","firstName","lastName","phone","substr","avatarUrl","onClick","editRow","colSpan","GET_CLIENT","qgl","ADD_CLIENT","UPDATE_CLIENT","AddUpdateClient","mutation","variables","config","endpoint","graphQLClient","GraphQLClient","headers","authorization","fetchData","a","request","useMutation","addSVG","AddFormClients","useForm","register","handleSubmit","errors","useState","isFormOpen","setIsFormOpen","wrapperRef","useRef","setFirstName","setLastName","setPhone","setAvatarUrl","mutate","onSuccess","refetch","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","type","preventDefault","style","transition","ref","onSubmit","data","String","name","required","pattern","minLength","maxLength","EditFormClients","currentClient","setClient","setEditing","updateClient","defaultValue","App","editing","setCurrentClient","setClients","key","query","useQuery","useClientsList","poolInterval","getClients","updatedClient","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","getElementById"],"mappings":"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","file":"static/js/main.5e4f20a1.chunk.js","sourcesContent":["import React from 'react';\n\ntype Fn<T> = ({}) => Array<T>;\n\ninterface Props {\n    editRow: Fn<Array<any>>\n    clients:\n        Array<{\n            id: string,\n            firstName: string,\n            lastName: string,\n            phone: number,\n            avatarUrl: string\n        }>\n}\n\nconst editSVG = <svg height=\"20px\" viewBox=\"0 0 512 512.00004\" width=\"20px\"\n                     xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n    <linearGradient id=\"a\" gradientUnits=\"userSpaceOnUse\" x1=\"255.5664972986\" x2=\"255.5664972986\"\n                    y1=\".000039\" y2=\"512.0003355972\">\n        <stop offset=\"0\" stopColor=\"#2af598\"/>\n        <stop offset=\"1\" stopColor=\"#009efd\"/>\n    </linearGradient>\n    <path\n        d=\"m511.132812 79.929688c-.019531-21.390626-8.367187-41.488282-23.507812-56.59375-31.226562-31.15625-81.992188-31.113282-113.183594.117187l-322.207031 323.503906c-10.480469 10.472657-18.480469 23.4375-23.136719 37.496094l-.300781.914063-28.796875 126.632812 126.984375-28.429688.945313-.3125c14.0625-4.65625 27.035156-12.648437 37.542968-23.152343l322.25-323.542969c15.113282-15.132812 23.429688-35.246094 23.410156-56.632812zm-440.714843 375.34375-13.464844-13.472657 9.722656-42.765625 46.613281 46.640625zm389.003906-346.9375-312.847656 314.105468-56.652344-56.6875 214.300781-215.160156 32.632813 32.632812 28.261719-28.261718-32.691407-32.691406 30.402344-30.519532 32.75 32.75 28.261719-28.261718-32.808594-32.808594 11.707031-11.753906c15.605469-15.625 41.023438-15.648438 56.65625-.050782 7.578125 7.5625 11.757813 17.625 11.769531 28.332032.007813 10.710937-4.152343 20.777343-11.742187 28.375zm-249.164063 363.261718h300.875v39.96875h-340.707031zm0 0\"\n        fill=\"url(#a)\"/>\n</svg>\n\nconst ClientsList: React.FC<Props> = (props) => {\n\n    return (\n        <>\n            <table className=\"table w-full\">\n                <thead className=\"table-row-group\">\n                <tr className=\"table-row\">\n                    <th className=\"table-cell p-5 border-b-1 text-left\">First Name</th>\n                    <th className=\"table-cell p-5 border-b-1 text-left\">Last Name</th>\n                    <th className=\"table-cell p-5 border-b-1 text-left\">Phone</th>\n                    <th className=\"table-cell p-5 border-b-1 text-left\">AvatarUrl</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.clients ? (\n                    props.clients.map((client: { id?: any; firstName?: any; lastName?: any; phone?: any; avatarUrl?: any; }) => (\n                        <tr key={client.id}>\n                            <td className=\"table-cell p-5 border-b border-green-400\">{client.firstName}</td>\n                            <td className=\"table-cell p-5 border-b border-green-400\">{client.lastName}</td>\n                            <td className=\"table-cell p-5 border-b border-green-400\">{client.phone?.substr(0, 13)}</td>\n                            <td className=\"table-cell p-5 border-b border-green-400\">{client.avatarUrl?.substr(0, 15)}</td>\n                            <td className=\"table-cell border-b border-green-400\">\n                                <button\n                                    className=\"outline-none focus:outline-none p-1\"\n                                    onClick={() => {\n                                        props.editRow(client)\n                                    }}>\n                                    {editSVG}</button>\n                            </td>\n                        </tr>\n                    ))\n                ) : (\n                    <tr>\n                        <td className=\"text-center\" colSpan={4}>None customers</td>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n        </>\n    )\n}\nexport default ClientsList;\n","import {request, GraphQLClient} from \"graphql-request\";\nimport {useMutation, useQuery} from \"react-query\";\nimport qgl from \"graphql-tag\";\n\n\nexport const GET_CLIENT = qgl`\n        query{\n            getClients {\n                id\n                firstName\n                lastName\n                phone\n                avatarUrl\n            }\n        }\n `;\n\nexport const ADD_CLIENT = qgl`\nmutation addClient($firstName: String!, $lastName: String!, $phone: String, $avatarUrl: String) {\n    addClient(firstName: $firstName, lastName: $lastName, phone: $phone, avatarUrl: $avatarUrl) {\n    id, firstName, lastName, phone, avatarUrl             \n    }\n}\n`;\n\nexport const UPDATE_CLIENT = qgl`\n  mutation updateClient($id: ID!, $firstName: String!, $lastName: String!, $phone: String,$avatarUrl: String) {\n    updateClient(id: $id, firstName: $firstName, lastName: $lastName, phone: $phone, avatarUrl: $avatarUrl) {\n    id, firstName, lastName, phone, avatarUrl             \n    }\n}\n`;\n\nexport const useClientsList = (key, query, config = {}) => {\n    const endpoint = \"https://test-task.expane.pro/api/graphql\";\n    const fetchData = async () => await request(endpoint, query)\n    return useQuery(key, fetchData, config);\n};\n\nexport const AddUpdateClient = (mutation, variables, config = {}) => {\n    const endpoint = \"https://test-task.expane.pro/api/graphql\";\n    const graphQLClient = new GraphQLClient(endpoint, {\n        headers: {\n            authorization: 'Bearer MY_TOKEN',\n        }\n    });\n\n    const fetchData = async () => await graphQLClient.request(mutation, variables);\n    return useMutation(fetchData, config);\n};\n","import {useForm} from \"react-hook-form\";\nimport React, {useState, useEffect, useRef} from 'react'\nimport {AddUpdateClient, ADD_CLIENT} from \"../ClientsList/queries\";\n\n\nconst addSVG = <svg height=\"50px\" viewBox=\"0 0 512 512\" width=\"50px\" xmlns=\"http://www.w3.org/2000/svg\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n    <linearGradient id=\"a\" gradientUnits=\"userSpaceOnUse\" x1=\"256\" x2=\"256\" y1=\"0\" y2=\"512\">\n        <stop offset=\"0\" stopColor=\"#2af598\"/>\n        <stop offset=\"1\" stopColor=\"#009efd\"/>\n    </linearGradient>\n    <path\n        d=\"m437.019531 74.980469c-48.351562-48.351563-112.640625-74.980469-181.019531-74.980469s-132.667969 26.628906-181.019531 74.980469c-48.351563 48.351562-74.980469 112.640625-74.980469 181.019531s26.628906 132.667969 74.980469 181.019531c48.351562 48.351563 112.640625 74.980469 181.019531 74.980469s132.667969-26.628906 181.019531-74.980469c48.351563-48.351562 74.980469-112.640625 74.980469-181.019531s-26.628906-132.667969-74.980469-181.019531zm-181.019531 397.019531c-119.101562 0-216-96.898438-216-216s96.898438-216 216-216 216 96.898438 216 216-96.898438 216-216 216zm20-236.019531h90v40h-90v90h-40v-90h-90v-40h90v-90h40zm0 0\"\n        fill=\"url(#a)\"/>\n</svg>\n\ntype Fn<T> = ({}) => Array<T>;\n\ninterface Props {\n    addClient: Fn<Array<any>>,\n    setEditing: any,\n    refetch: any\n}\n\nconst AddFormClients: React.FC<Props> = (props) => {\n\n    interface IFormInput {\n        firstName: string;\n        lastName: string;\n        phone: number;\n        avatarUrl: string;\n    }\n\n    const {register, handleSubmit, errors} = useForm<IFormInput>();\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [avatarUrl, setAvatarUrl] = useState(\"\");\n\n    const {mutate} = AddUpdateClient(ADD_CLIENT, {firstName, lastName, phone, avatarUrl}, {\n        onSuccess: () => {\n            props.refetch();\n        }\n    });\n\n    const onSubmit = (data: any) => {\n        const {firstName, lastName, phone, avatarUrl} = data;\n        setFirstName(firstName);\n        setLastName(lastName);\n        setPhone(String(phone));\n        setAvatarUrl(String(avatarUrl));\n        mutate();\n        setIsFormOpen(false);\n    }\n\n    const handleClick = (event: React.MouseEvent) => {\n        event.preventDefault();\n        setIsFormOpen(() => !isFormOpen);\n    };\n\n    const handleClickOutside = (event: any) => {\n        if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n            setIsFormOpen(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    }, []);\n\n    return (\n        <div>\n            <button\n                className=\"float-right p-10 outline-none focus:outline-none\"\n                type='button'\n                onClick={handleClick}\n                style={{transition: \"all .15s ease\"}}\n            >\n                {addSVG}\n            </button>\n            {isFormOpen && (\n                <div\n                    className=\"bg-gray-900 w-full h-full\">\n                    <div\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed bg-gray-900 inset-0 z-50 outline-none focus:outline-none\">\n                        <div ref={wrapperRef}\n                             className=\"relative w-auto my-6 mx-auto max-w-sm\">\n                            <div\n                                className=\"border-0 rounded-lg p-10 bg-gray-800 relative w-full flex flex-col outline-none focus:outline-none\">\n                                <div className=\"flex flex-col items-start justify-between p-5 rounded-t\">\n                                    <h2 className=\"text-3xl pb-2 mb-3 text-center border-b border-green-400 w-full\">Add\n                                        Customer</h2>\n                                    <form\n                                        className=\"border-0 relative flex flex-col w-full outline-none focus:outline-none\"\n                                        onSubmit={handleSubmit(onSubmit)}\n                                    >\n                                        <label className=\"pt-5 pb-1\">First Name</label>\n                                        <input\n                                            className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                            name=\"firstName\"\n                                            ref={register({required: true, pattern: /^[A-Za-z]+$/i})}/>\n                                        <p className=\"text-red-700 pt-1\">{errors.firstName && \"First name is required. Please, enter letters only\"}</p>\n                                        <label className=\"pt-5 pb-1\">Last Name</label>\n                                        <input\n                                            className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                            name=\"lastName\"\n                                            ref={register({required: true, pattern: /^[A-Za-z]+$/i})}/>\n                                        <p className=\"text-red-700\">{errors.lastName && \"Last name is required. Please, enter letters only\"}</p>\n                                        <label className=\"pt-5 pb-1\">Phone</label>\n                                        <input\n                                            className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                            name=\"phone\"\n                                            ref={register({\n                                                minLength: 10,\n                                                maxLength: 12,\n                                                pattern: /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n                                            })}/>\n                                        <p className=\"text-red-700\">{errors.phone && \"The phone's number has to start with 380..\"}</p>\n                                        <label className=\"pt-5 pb-1\">AvatarUrl</label>\n                                        <input\n                                            className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                            type=\"url\"\n                                            name=\"avatarUrl\"\n                                            ref={register({\n                                                pattern: /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/\n                                            })}/>\n                                        <p className=\"text-red-700\">{errors.avatarUrl && \"Please enter the URL of your avatar\"}</p>\n                                        <div className=\"flex flex-row justify-between\">\n                                            <button\n                                                className=\"mt-8 w-28 py-1 border-0 rounded-md  border border-green-400 hover:bg-green-600 outline-none focus:outline-none\"\n                                                type=\"submit\"\n                                            >\n                                                Add\n                                            </button>\n                                            <button\n                                                className=\"mt-8 w-28 py-1 border-0 rounded-md  border border-green-400 hover:bg-green-600 outline-none focus:outline-none\"\n                                                onClick={() => setIsFormOpen(false)}>\n                                                Cancel\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AddFormClients;\n","import React, {useState, useEffect, useRef} from 'react';\nimport {useForm} from \"react-hook-form\";\n\ntype Fn<T> = (client: {}) => Array<T>;\n\ninterface Props {\n    updateClient: Fn<Array<{}>>,\n    refetch: any,\n    editing: boolean,\n    setEditing: any,\n    currentClient: any,\n}\n\nconst EditFormClients: React.FC<Props> = (props) => {\n\n    interface IFormInput {\n        firstName: string;\n        lastName: string;\n        age: string;\n        phone: number;\n        avatarUrl: string;\n    }\n\n    const [client, setClient] = useState(props.currentClient);\n    const {register, errors, handleSubmit} = useForm<IFormInput>();\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    useEffect(\n        () => {\n            setClient(props.currentClient);\n        },\n        [props]\n    );\n\n    const onSubmit = (data: IFormInput) => {\n        props.updateClient(data);\n    }\n\n    const handleClickOutside = (event: any) => {\n        if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n            props.setEditing(false)\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    }, []);\n\n    return (\n        <div\n            className=\"bg-gray-900 w-full h-full\">\n            <div\n                className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed bg-gray-900 inset-0 z-50 outline-none focus:outline-none\">\n                <div ref={wrapperRef}\n                     className=\"relative w-auto my-6 mx-auto max-w-sm\">\n                    <div\n                        className=\"border-0 rounded-lg p-10 bg-gray-800 relative w-full flex flex-col outline-none focus:outline-none\">\n                        <div className=\"flex flex-col items-start justify-between p-5 rounded-t\">\n                            <h2 className=\"text-3xl pb-2 mb-3 text-center border-b border-green-400 w-full\">Edit\n                                Customer</h2>\n                            <form\n                                className=\"border-0 relative flex flex-col w-full outline-none focus:outline-none\"\n                                onSubmit={handleSubmit(onSubmit)}>\n                                <label className=\"pt-5 pb-1\">First Name</label>\n                                <input\n                                    className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                    name=\"firstName\"\n                                    defaultValue={client.firstName}\n                                    ref={register({required: true, maxLength: 20})}/>\n                                <p className=\"text-red-700 pt-1\">{errors.firstName && \"First name is required. Please, enter letters only\"}</p>\n                                <label className=\"pt-5 pb-1\">Last Name</label>\n                                <input\n                                    className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                    name=\"lastName\"\n                                    defaultValue={client.lastName}\n                                    ref={register({required: true, pattern: /^[A-Za-z]+$/i})}/>\n                                <p className=\"text-red-700\">{errors.lastName && \"Last name is required. Please, enter letters only\"}</p>\n                                <label className=\"pt-5 pb-1\">Phone</label>\n                                <input\n                                    className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                    name=\"phone\"\n                                    defaultValue={client.phone}\n                                    ref={register({\n                                        minLength: 10,\n                                        maxLength: 12,\n                                        pattern: /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n                                    })}/>\n                                <p className=\"text-red-700\">{errors.phone && \"The phone's number has to start with 380..\"}</p>\n                                <label className=\"pt-5 pb-1\">AvatarUrl</label>\n                                <input\n                                    className=\"pl-2 text-black border-0 rounded-md p-1 w-64 outline-none focus:outline-none\"\n                                    name=\"avatarUrl\"\n                                    type=\"url\"\n                                    defaultValue={client.avatarUrl}\n                                    ref={register({\n                                        pattern: /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/\n                                    })}/>\n                                <p className=\"text-red-700\">{errors.avatarUrl && \"Please enter the URL of your avatar\"}</p>\n\n                                <div className=\"flex flex-row justify-between\">\n                                    <button\n                                        className=\"mt-8 w-28 py-1 border-0 rounded-md  border border-green-400 hover:bg-green-600 outline-none focus:outline-none\"\n                                        type=\"submit\"\n                                    >Update\n                                    </button>\n                                    <button\n                                        className=\"mt-8 w-28 py-1 border-0 rounded-md  border border-green-400 hover:bg-green-600 outline-none focus:outline-none\"\n                                        onClick={() => props.setEditing(false)}>\n                                        Cancel\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditFormClients;\n","import React, {useState} from 'react';\nimport \"../../tailwind.css\"\nimport ClientsList from \"../ClientsList\"\nimport AddFormClients from \"../AddFormClients\"\nimport EditFormClients from \"../EditFormClients\";\nimport {useClientsList, GET_CLIENT, AddUpdateClient, UPDATE_CLIENT} from \"../ClientsList/queries\"\n\n\nfunction App() {\n\n    const [editing, setEditing] = useState(false)\n    const initialFormState = {id: null, firstName: \"\", lastName: \"\", phone: \"\", avatarUrl: \"\"};\n    const [currentClient, setCurrentClient] = useState(initialFormState);\n    const [clients, setClients] = useState(null);\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [avatarUrl, setAvatarUrl] = useState(\"\");\n    const {id} = currentClient;\n\n    const {data, refetch} = useClientsList(\"getClients\", GET_CLIENT, {\n        poolInterval: 500,\n        onSuccess: (data) => {\n            const {getClients} = data;\n            setClients(getClients)\n        }\n    });\n\n    const {mutate} = AddUpdateClient(UPDATE_CLIENT, {id, firstName, lastName, phone, avatarUrl}, {\n        onSuccess: () => {\n            refetch();\n        }\n    });\n\n    const updateClient = (updatedClient) => {\n        setEditing(false);\n        const {firstName, lastName, phone, avatarUrl} = updatedClient;\n        setFirstName(firstName);\n        setLastName(lastName);\n        setPhone(String(phone));\n        setAvatarUrl(String(avatarUrl));\n        mutate(updatedClient);\n    }\n\n    const editRow = client => {\n        setEditing(true)\n        setCurrentClient({\n            id: client.id,\n            firstName: client.firstName,\n            lastName: client.lastName,\n            phone: client.phone,\n            avatarUrl: client.avatarUrl\n        });\n    }\n\n    return (\n        <div className=\"md:container md:mx-auto relative\">\n            <h1 className=\"text-4xl text-center p-10\">Customer's list</h1>\n            <div className=\"bg-gray-800 p-5 border-0 rounded-lg\">\n                <ClientsList\n                    editRow={editRow}\n                    clients={clients}\n                />\n                {editing ? (\n                    <div>\n                        <EditFormClients\n                            editing={editing}\n                            setEditing={setEditing}\n                            currentClient={currentClient}\n                            updateClient={updateClient}\n                        />\n                    </div>\n                ) : (\n                    <div>\n                        <AddFormClients\n                            setEditing={setEditing}\n                            refetch={refetch}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./tailwind.css\"\nimport App from './components/app/App';\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n    <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n    <App />\n    </QueryClientProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}